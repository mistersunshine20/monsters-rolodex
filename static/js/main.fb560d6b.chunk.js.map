{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchField/SearchField.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","name","src","id","email","CardList","monsters","map","SearchField","onChange","placeholder","value","style","type","App","handleChange","e","setState","searchValue","target","state","fetch","crossDomain","method","headers","then","response","json","responseJson","this","loadData","filteredMonsters","filter","toLowerCase","includes","margin","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAaeA,EAVF,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACX,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAKF,EAAQG,KAAMC,IAAG,+BAA0BJ,EAAQK,GAAlC,4BAC3B,6BAAKL,EAAQG,OACb,8BAAMH,EAAQM,YCMXC,G,MAVE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACf,OACI,qBAAKP,UAAU,YAAf,SACKO,EAASC,KAAI,SAACT,GACX,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQK,WCK3BK,EAVK,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAChD,OAAO,uBACHC,KAAK,SACLH,YAAaA,EACbE,MAAOA,EACPD,MAAOA,EACPF,SAAUA,KCmDHK,E,kDAtDX,aAAe,IAAD,8BACV,gBA4BJC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOR,SA3BrC,EAAKS,MAAQ,CACTd,SAAU,GACVY,YAAa,IALP,E,4CASd,WAAY,IAAD,OAEPG,MADU,6CACC,CACPC,aAAa,EACbC,OAAQ,MACRC,QAAS,CAAC,eAAe,sBAExBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEF,EAAKX,SAAS,CAACX,SAAUsB,S,+BAMrC,WACIC,KAAKC,a,oBAOT,WAAU,IAAD,EAC2BD,KAAKT,MAA9Bd,EADF,EACEA,SAAUY,EADZ,EACYA,YAEXa,EAAmBzB,EAAS0B,QAAO,SAAAlC,GAAO,OAAIA,EAAQG,KAAKgC,cAAcC,SAAShB,MAExF,OACI,sBAAKnB,UAAU,MAAf,UACI,0CACA,cAAC,EAAD,CACIW,YAAY,qBACZE,MAAO,CAACuB,OAAQ,QAChBxB,MAAOO,EACPT,SAAUoB,KAAKd,eAGnB,cAAC,EAAD,CAAUT,SAAUyB,W,GAjDlBK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fb560d6b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = ({monster}) => {\n    return (\n        <div className=\"card-container\">\n            <img alt={monster.name} src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} />\n            <h2>{monster.name}</h2>\n            <div>{monster.email}</div>\n        </div>\n    )\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./../Card/Card\"\nimport \"./CardList.css\";\n\nconst CardList = ({monsters}) => {\n    return (\n        <div className=\"card-list\">\n            {monsters.map((monster) => {\n                return <Card key={monster.id} monster={monster} />\n            })}\n        </div>\n    );\n}\n\nexport default CardList;\n","import React from \"react\";\n//import \"./CardList.css\";\n\nconst SearchField = ({onChange, placeholder, value, style}) => {\n    return <input \n        type=\"search\" \n        placeholder={placeholder} \n        style={style} \n        value={value} \n        onChange={onChange} \n    />\n}\n\nexport default SearchField;\n","import React from \"react\";\nimport './App.css';\nimport CardList from \"./components/CardList/CardList\"\nimport SearchField from \"./components/SearchField/SearchField\"\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = { \n            monsters: [],\n            searchValue: \"\"\n        };\n    }\n\n    loadData() {\n        let url = \"https://jsonplaceholder.typicode.com/users\";\n        fetch(url, {\n            crossDomain: true,\n            method: 'GET',\n            headers: {'Content-Type':'application/json'},\n          })\n            .then(response => response.json())\n            .then(responseJson => {\n                //console.log(responseJson);\n                this.setState({monsters: responseJson});\n              // ...\n            }\n          );\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    handleChange = e => {\n        this.setState({searchValue: e.target.value})\n    }\n\n    render() {\n        const {monsters, searchValue} = this.state;\n\n        const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchValue));\n\n        return (\n            <div className=\"App\">\n                <h1>monsters</h1>\n                <SearchField \n                    placeholder=\"search monsters...\" \n                    style={{margin: \"20px\"}} \n                    value={searchValue} \n                    onChange={this.handleChange} \n                    />\n\n                <CardList monsters={filteredMonsters} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}